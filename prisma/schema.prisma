generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id        Int     @id @default(autoincrement())
  email     String  @unique
  password  String
  rol       String  @default("editor")
}

model Noticia {
  id         Int      @id @default(autoincrement())
  titulo     String
  contenido  String
  imagenUrl  String
  fecha      DateTime @default(now())
}

enum EstadoEvento {
  PROXIMAMENTE
  EN_CURSO
  FINALIZADO
}

model Evento {
  id          Int           @id @default(autoincrement())
  titulo      String
  descripcion String
  fecha       DateTime
  imagenUrl   String
  estado      EstadoEvento  @default(PROXIMAMENTE)
}

enum Categoria {
  ACTIVO
  JUVENIL
  CONTRIBUYENTE
}

model Asociado {
  id              Int       @id @default(autoincrement())
  email           String    @unique
  apellido        String
  nombre          String
  dni             Int       @unique
  telefono        BigInt?
  fechaNacimiento DateTime
  direccion       String
  categoria       Categoria
  escuela         String?
  curso           String?
  comentario      String?
  fechaInscripcion DateTime @default(now())
  prestamos       Prestamo[]
  pagos           Pago[]
}


model Taller {
  id           Int      @id @default(autoincrement())
  titulo       String
  descripcion  String
  imagenUrl    String
  fecha        DateTime
  hora         String
  facilitador  String
  creadoEn     DateTime @default(now())
}
model Libro {
  id                 Int      @id @default(autoincrement())
  st                 Int?      
  ISBN               String?  @db.VarChar(255)
  autor              String?  @db.VarChar(255)
  titulo             String
  subtitulo          String?  @db.VarChar(255)
  edicion            String?  @db.VarChar(255)
  lugar              String?  @db.VarChar(255)
  editorial          String?  @db.VarChar(255)
  fechaPublicacion   String?  @db.VarChar(255)
  extension          String?  @db.VarChar(255)
  caracteristicas    String?  @db.VarChar(255)
  volumen            String?  @db.VarChar(255)
  materia            String?  @db.VarChar(255)
  bibliotecario      String?  @db.VarChar(255)
  cutter             String?  @db.VarChar(255)
  prestamos          Prestamo[]
}

model Prestamo {
  id         Int      @id @default(autoincrement())
  asociado   Asociado @relation(fields: [asociadoId], references: [id])
  asociadoId Int
  libro      Libro    @relation(fields: [libroId], references: [id])
  libroId    Int
  estado     EstadoPrestamo
  fechaInicio DateTime @default(now())
  fechaFin    DateTime?

  @@unique([asociadoId, libroId]) // evita duplicados
}

enum EstadoPrestamo {
  ACTIVO
  DEVUELTO
  VENCIDO
}
enum Mes {
  ENERO
  FEBRERO
  MARZO
  ABRIL
  MAYO
  JUNIO
  JULIO
  AGOSTO
  SEPTIEMBRE
  OCTUBRE
  NOVIEMBRE
  DICIEMBRE
}

enum EstadoPago {
  PENDIENTE
  PAGADO
  IMPAGO
}

model Pago {
  id             Int        @id @default(autoincrement())
  asociado       Asociado   @relation(fields: [asociadoId], references: [id])
  asociadoId     Int
  mes            Mes
  año            Int
  fechaPago      DateTime   @default(now())
  comprobanteUrl String?
  estado         EstadoPago @default(PENDIENTE)
  comentario     String?

  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt

  @@unique([asociadoId, mes, año])
}

